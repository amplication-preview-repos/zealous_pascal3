/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Courier as PrismaCourier } from "@prisma/client";

export class CourierServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CourierCountArgs, "select">): Promise<number> {
    return this.prisma.courier.count(args);
  }

  async couriers(args: Prisma.CourierFindManyArgs): Promise<PrismaCourier[]> {
    return this.prisma.courier.findMany(args);
  }
  async courier(
    args: Prisma.CourierFindUniqueArgs
  ): Promise<PrismaCourier | null> {
    return this.prisma.courier.findUnique(args);
  }
  async createCourier(args: Prisma.CourierCreateArgs): Promise<PrismaCourier> {
    return this.prisma.courier.create(args);
  }
  async updateCourier(args: Prisma.CourierUpdateArgs): Promise<PrismaCourier> {
    return this.prisma.courier.update(args);
  }
  async deleteCourier(args: Prisma.CourierDeleteArgs): Promise<PrismaCourier> {
    return this.prisma.courier.delete(args);
  }
}
